{"version":3,"sources":["dist/images sync /^/.*/.png$","dist/images/146-1466338_poro-smirk-emoji-league-of-legends-discord.png","dist/images/girl.png","dist/images/masubi.png","dist/images/poro-essence.png","dist/images/soldier.png","components/tile.js","pages/home.js","localization/local-home-tile.js","pages/about.js","localization/local-convention-tile.js","pages/convention.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Tile","obj","console","log","tile","class","src","require","image","alt","headline","subheadline","tileComponent","element","Home","About","tileInfo","Convention","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd9fc7ad.chunk.js","sourcesContent":["var map = {\n\t\"./146-1466338_poro-smirk-emoji-league-of-legends-discord.png\": 25,\n\t\"./girl.png\": 26,\n\t\"./masubi.png\": 27,\n\t\"./poro-essence.png\": 28,\n\t\"./soldier.png\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/146-1466338_poro-smirk-emoji-league-of-legends-discord.78decb90.png\";","module.exports = __webpack_public_path__ + \"static/media/girl.e791596f.png\";","module.exports = __webpack_public_path__ + \"static/media/masubi.35212535.png\";","module.exports = __webpack_public_path__ + \"static/media/poro-essence.cabcabd8.png\";","module.exports = __webpack_public_path__ + \"static/media/soldier.f9aa2b10.png\";","import React from \"react\";\r\nimport \"../dist/css/main.css\";\r\n\r\nvar Tile = (obj) => {\r\n    console.log(obj.tile)\r\n    return (\r\n        <div class=\"tile__container\">\r\n            <div class=\"tile__image\">\r\n                <img src={require(\"../dist/images/\" + obj.tile.image + \".png\")} class=\"tile__image--size\" alt=\"\" />\r\n            </div>\r\n            <div class=\"tile__upper-box\">\r\n                <p class=\"tile__headline\">{obj.tile.headline}</p>\r\n            </div>\r\n            <div class=\"tile__lower-box\">\r\n                <p class=\"tile__sub-headline\">{obj.tile.subheadline}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tile;","import React from \"react\";\r\nimport Tile from \"../components/tile\";\r\nimport tileInfo from \"../localization/local-home-tile\";\r\nimport \"../dist/css/main.css\";\r\n\r\nvar tileComponent = tileInfo.map(element => <Tile tile={element}></Tile>);\r\n\r\nconst Home = () => (\r\n    <>\r\n        <div class=\"home__image home__image--landing-page\"></div>\r\n        <div class=\"home__box\">\r\n            <div class=\"home__box--panel\">\r\n                <h2 class=\"home__box--title\">\r\n                    Hello everyone, we are the Sewcase\r\n                </h2>\r\n                <p class=\"home__box--subtitle\">\r\n                    We are doing some cool stuff and we share an amazing\r\n                    experience @Dokomi and @Gamescom\r\n                </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"home__container home__container--dark\">{tileComponent}</div>\r\n\r\n        <div class=\"home__image home__image--poro\">\r\n            <div class=\"home__box--full-height\">\r\n                <div class=\"home__box--panel\">\r\n                    <h2 class=\"home__box--title\">This is our Team</h2>\r\n                    <p class=\"home__box--subtitle\">\r\n                        Feel free to ask us anything during the convention and\r\n                        on our social media.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"home__container home__container--dark\">\r\n            <div class=\"home__container--half\">\r\n                <p>\r\n                    The Summoner Sewcase is a Fan created initiative, that\r\n                    offers League of Legends Cosplay related content from Fans –\r\n                    for Fans!\r\n                </p>\r\n                <p>\r\n                    We run booths at Events like DoKomi and GamesCom as well as\r\n                    On- & Offline Cosplay competitions. Our goal is to create a\r\n                    place where League of Legends Fans and Cosplayers can have a\r\n                    great time together and experience something new!\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default Home;\r\n","var tileInfo = [\r\n    {\r\n        image: \"soldier\",\r\n        headline: \"Training Grounds\",\r\n        subheadline: \"Engage AI opponents in a Training Grounds mission\"\r\n    },\r\n    {\r\n        image: \"girl\",\r\n        headline: \"Convention planner\",\r\n        subheadline: \"Every good convention needs a plan. Make sure to contact us\"\r\n    },\r\n    {\r\n        image: \"masubi\",\r\n        headline: \"Sushi Experts\",\r\n        subheadline: \"THe quality of rice and fish are essential for this recipe\"\r\n    }\r\n];\r\n\r\nexport default tileInfo;","import React from \"react\";\r\nimport \"../dist/css/main.css\";\r\n\r\nconst About = () => {\r\n    return <div>Hier könnte eine About Page erscheinen</div>;\r\n};\r\n\r\nexport default About;\r\n","var tileInfo = [\r\n    {\r\n        image: \"soldier\",\r\n        headline: \"Fight Corona\",\r\n        subheadline: \"Buy Plague Inc and try to defeat Corona\"\r\n    },\r\n    {\r\n        image: \"girl\",\r\n        headline: \"Cringe Conventions\",\r\n        subheadline: \"Every good convention has people that make us cringe\"\r\n    },\r\n    {\r\n        image: \"masubi\",\r\n        headline: \"Sushi Beginners\",\r\n        subheadline: \"We can make some good old and cheap methods to create amazing sushi\"\r\n    }\r\n];\r\n\r\nexport default tileInfo;","import React from \"react\";\r\nimport Tile from \"../components/tile\";\r\nimport tileInfo from '../localization/local-convention-tile'\r\nimport \"../dist/css/main.css\";\r\n\r\nconst Convention = () => {\r\n    var tileComponent = tileInfo.map(element => <Tile tile={element}></Tile>);\r\n    return (\r\n        <>\r\n            <div class=\"convention__container\">\r\n                {tileComponent}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Convention;\r\n","import React from \"react\";\nimport Home from \"./pages/home\";\nimport About from \"./pages/about\";\nimport Convention from \"./pages/convention\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <Router>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/about\">About</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/convention\">Convention</Link>\n                    </li>\n                </ul>\n            </nav>\n            <Switch>\n                <Route path=\"/convention\">\n                    <Convention />\n                </Route>\n                <Route path=\"/about\">\n                    <About />\n                </Route>\n                <Route path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}